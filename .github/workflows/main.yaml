name: Build
on: push
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ["8.6", "8.8", "8.10", "latest"]
        os: [ubuntu-latest, macOS-latest]
    name: Build with GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Retrieve .stack from cache
        uses: actions/cache@v2
        env:
          cache-name: cache-stack-work
        with:
          path: "~/.stack"
          key: "stack-${{ runner.os }}-ghc-${{ matrix.ghc }}-${{ hashFiles('stack.yaml.lock') }}"
          restore-keys: |
            stack-${{ runner.os }}-ghc-${{ matrix.ghc }}-
            stack-${{ runner.os }}-

      - name: Set up Haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          stack-version: latest

      - name: Build
        run: |
          stack --no-terminal build --no-run-benchmarks --pedantic
          mkdir dist
          stack --no-terminal install --local-bin-path=dist
          chmod u+x dist/pnbackup

      - name: Set environment variables
        if: "${{ startsWith(github.ref, 'refs/tags/v') }}"
        run: |
          REF=${{ github.ref }}
          VERSION=${REF/refs\/tags\/v/}
          LABEL=pinboard-notes-backup-$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "LABEL=$LABEL" >> $GITHUB_ENV

      - name: Create release tarball
        if: "${{ startsWith(github.ref, 'refs/tags/v') && matrix.ghc == 'latest' }}"
        run: |
          OS=$(echo "${{ runner.os }}" | tr '[A-Z]' '[a-z]')
          mkdir $LABEL
          stack --no-terminal install --local-bin-path=$LABEL
          cp README.md LICENSE.txt man/pnbackup.1 $LABEL
          tar -czvf $LABEL-$OS.tar.gz $LABEL

      - name: Add release assets
        uses: softprops/action-gh-release@e99df7cd8088d9c5dddab02bf975f62025a6e760
        if: "${{ startsWith(github.ref, 'refs/tags/v') && matrix.ghc == 'latest' && endsWith(matrix.os, '-latest') }}"
        with:
          draft: true
          files: "pinboard-notes-backup-*.tar.gz"
          fail_on_unmatched_files: true
          name: "Version ${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
